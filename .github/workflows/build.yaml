name: Build

on:
  - push
  - pull_request

jobs:
  generate:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-24.04-arm
          - windows-latest
          - windows-11-arm
          - macos-15-intel
          - macos-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: python -m pip install cibuildwheel==3.2.0
      - id: generate
        run: |
          python -m cibuildwheel --print-build-identifiers | jq -nR '{"only": inputs, "os": "${{ matrix.os }}"}' | jq -sc > matrix.json
      - uses: actions/upload-artifact@v4
        with:
          name: matrix-${{ matrix.os }}
          path: matrix.json
  collect:
    runs-on: ubuntu-latest
    needs:
      - generate
    outputs:
      matrix: ${{ steps.collect.outputs.matrix }}
    steps:
      - uses: actions/download-artifact@v5
        name: matrix-*
      - id: collect
        run: echo "matrix=$(cat matrix-*/matrix.json | jq -sc add)" >> "$GITHUB_OUTPUT"
  cleanup:
    runs-on: ubuntu-latest
    needs:
      - collect
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: matrix-*
      - run: echo '${{ needs.collect.outputs.matrix }}'
  build:
    name: ${{ matrix.os }}-${{ matrix.only }}
    needs:
      - collect
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.collect.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: python -m pip install cibuildwheel==3.2.0
      - run: python -m cibuildwheel
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: ./wheelhouse/*.whl
